//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfDomain.Entity")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaNacimiento {
            get {
                return this.FechaNacimientoField;
            }
            set {
                if ((this.FechaNacimientoField.Equals(value) != true)) {
                    this.FechaNacimientoField = value;
                    this.RaisePropertyChanged("FechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((object.ReferenceEquals(this.SexoField, value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWCFUsers")]
    public interface IWCFUsers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/GetUserDetails", ReplyAction="http://tempuri.org/IWCFUsers/GetUserDetailsResponse")]
        WcfClient.ServiceReference1.UserDetails[] GetUserDetails(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/GetUserDetails", ReplyAction="http://tempuri.org/IWCFUsers/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.UserDetails[]> GetUserDetailsAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/InsertUserDetails", ReplyAction="http://tempuri.org/IWCFUsers/InsertUserDetailsResponse")]
        string InsertUserDetails(WcfClient.ServiceReference1.UserDetails UserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/InsertUserDetails", ReplyAction="http://tempuri.org/IWCFUsers/InsertUserDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertUserDetailsAsync(WcfClient.ServiceReference1.UserDetails UserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/GetAllUser", ReplyAction="http://tempuri.org/IWCFUsers/GetAllUserResponse")]
        WcfClient.ServiceReference1.UserDetails[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/GetAllUser", ReplyAction="http://tempuri.org/IWCFUsers/GetAllUserResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.UserDetails[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/UpdateUser", ReplyAction="http://tempuri.org/IWCFUsers/UpdateUserResponse")]
        bool UpdateUser(WcfClient.ServiceReference1.UserDetails UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/UpdateUser", ReplyAction="http://tempuri.org/IWCFUsers/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(WcfClient.ServiceReference1.UserDetails UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/DeleteUser", ReplyAction="http://tempuri.org/IWCFUsers/DeleteUserResponse")]
        bool DeleteUser(int UserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/DeleteUser", ReplyAction="http://tempuri.org/IWCFUsers/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int UserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/FindById", ReplyAction="http://tempuri.org/IWCFUsers/FindByIdResponse")]
        bool FindById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFUsers/FindById", ReplyAction="http://tempuri.org/IWCFUsers/FindByIdResponse")]
        System.Threading.Tasks.Task<bool> FindByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFUsersChannel : WcfClient.ServiceReference1.IWCFUsers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFUsersClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.IWCFUsers>, WcfClient.ServiceReference1.IWCFUsers {
        
        public WCFUsersClient() {
        }
        
        public WCFUsersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFUsersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFUsersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFUsersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfClient.ServiceReference1.UserDetails[] GetUserDetails(string UserName) {
            return base.Channel.GetUserDetails(UserName);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.UserDetails[]> GetUserDetailsAsync(string UserName) {
            return base.Channel.GetUserDetailsAsync(UserName);
        }
        
        public string InsertUserDetails(WcfClient.ServiceReference1.UserDetails UserInfo) {
            return base.Channel.InsertUserDetails(UserInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserDetailsAsync(WcfClient.ServiceReference1.UserDetails UserInfo) {
            return base.Channel.InsertUserDetailsAsync(UserInfo);
        }
        
        public WcfClient.ServiceReference1.UserDetails[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.UserDetails[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public bool UpdateUser(WcfClient.ServiceReference1.UserDetails UserID) {
            return base.Channel.UpdateUser(UserID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(WcfClient.ServiceReference1.UserDetails UserID) {
            return base.Channel.UpdateUserAsync(UserID);
        }
        
        public bool DeleteUser(int UserInfo) {
            return base.Channel.DeleteUser(UserInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int UserInfo) {
            return base.Channel.DeleteUserAsync(UserInfo);
        }
        
        public bool FindById(int id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<bool> FindByIdAsync(int id) {
            return base.Channel.FindByIdAsync(id);
        }
    }
}
